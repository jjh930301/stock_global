version: "3"
services:
  stock:
    platform: linux/amd64 # m1
    image: "mysql:8.0.33"
    logging:
      driver: none
    restart: always
    container_name: stock
    ports:
      - "3310:3306"
    env_file:
      - ./.env
    volumes:
      - ./mysql/conf.d:/etc/mysql/conf.d
      - ./mysql/data:/var/lib//mysql
      - ./mysql/initdb.d:/docker-entrypoint-initdb.d
    cap_add:
      - SYS_NICE
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
  tor1:
    image: dperson/torproxy
    container_name: tor1
    ports:
      - "9050:9050"
      - "9051:9051"
      - "5353:5353"
    volumes:
      - ./tor/torrc:/etc/tor/torrc
    deploy:
      resources:
        limits:
          memory: 128m
          cpus: "0.25"
    restart: unless-stopped
  tor2:
    image: dperson/torproxy
    container_name: tor2
    ports:
      - "9052:9050"
      - "9053:9051"
      - "5354:5353"
    volumes:
      - ./tor/torrc:/etc/tor/torrc
    deploy:
      resources:
        limits:
          memory: 128m
          cpus: "0.25"
  tor3:
    image: dperson/torproxy
    container_name: tor3
    ports:
      - "9054:9050"
      - "9055:9051"
      - "5355:5353"
    volumes:
      - ./tor/torrc:/etc/tor/torrc
    deploy:
      resources:
        limits:
          memory: 128m
          cpus: "0.25"
    restart: unless-stopped
  tor4:
    image: dperson/torproxy
    container_name: tor4
    ports:
      - "9056:9050"
      - "9057:9051"
      - "5356:5353"
    volumes:
      - ./tor/torrc:/etc/tor/torrc
    deploy:
      resources:
        limits:
          memory: 128m
          cpus: "0.25"
    restart: unless-stopped
  tor5:
    image: dperson/torproxy
    container_name: tor5
    ports:
      - "9058:9050"
      - "9059:9051"
      - "5357:5353"
    volumes:
      - ./tor/torrc:/etc/tor/torrc
    deploy:
      resources:
        limits:
          memory: 128m
          cpus: "0.25"
  tor6:
    image: dperson/torproxy
    container_name: tor6
    ports:
      - "9060:9050"
      - "9061:9051"
      - "5358:5353"
    volumes:
      - ./tor/torrc:/etc/tor/torrc
    deploy:
      resources:
        limits:
          memory: 128m
          cpus: "0.25"
    restart: unless-stopped
  redis-master:
    image: redis:7-alpine
    container_name: redis-master
    ports:
      - "6379:6379"
    volumes:
      - ./redis/master.conf:/usr/local/etc/redis/redis.conf
      - ./redis/entrypoint.sh:/usr/local/entrypoint.sh
    entrypoint: [sh, "/usr/local/entrypoint.sh"]
    depends_on:
      - redis-node1
      - redis-node2

  redis-node1:
    image: redis:7-alpine
    container_name: redis-node1
    ports:
      - "6380:6379"
    volumes:
      - ./redis/node.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf

  redis-node2:
    image: redis:7-alpine
    container_name: redis-node2
    ports:
      - "6381:6379"
    volumes:
      - ./redis/node.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf

  sentinel1:
    image: redis:7-alpine
    container_name: sentinel1
    env_file:
      - ./.env
    ports:
      - "26379:26379"
    volumes:
      - ./redis/sentinel.conf:/usr/local/etc/redis/sentinel.conf
      - ./redis/sentinel-entrypoint.sh:/usr/local/sentinel-entrypoint.sh
    depends_on:
      - redis-master
      - redis-node1
      - redis-node2
    entrypoint: ["sh", "/usr/local/sentinel-entrypoint.sh"]

  sentinel2:
    image: redis:7-alpine
    container_name: sentinel2
    env_file:
      - ./.env
    ports:
      - "26380:26379"
    volumes:
      - ./redis/sentinel.conf:/usr/local/etc/redis/sentinel.conf
      - ./redis/sentinel-entrypoint.sh:/usr/local/sentinel-entrypoint.sh
    depends_on:
      - redis-master
      - redis-node1
      - redis-node2
    entrypoint: ["sh", "/usr/local/sentinel-entrypoint.sh"]

  sentinel3:
    image: redis:7-alpine
    container_name: sentinel3
    env_file:
      - ./.env
    ports:
      - "26381:26379"
    volumes:
      - ./redis/sentinel.conf:/usr/local/etc/redis/sentinel.conf
      - ./redis/sentinel-entrypoint.sh:/usr/local/sentinel-entrypoint.sh
    depends_on:
      - redis-master
      - redis-node1
      - redis-node2
    entrypoint: ["sh", "/usr/local/sentinel-entrypoint.sh"]
