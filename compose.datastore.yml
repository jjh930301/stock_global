# docker network create --driver overlay --attachable global
services:
  postgres:
    image: timescale/timescaledb:latest-pg17
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: global
      POSTGRES_USER: jjh
      POSTGRES_PASSWORD: password
      PGMAXCONNECTIONS: 1000
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
  stock:
    platform: linux/amd64 # m1
    image: "mysql:8.0.33"
    logging:
      driver: none
    restart: always
    container_name: stock
    ports:
      - "3310:3306"
    env_file:
      - ./.env
    volumes:
      - ./mysql/conf.d:/etc/mysql/conf.d
      - ./mysql/data:/var/lib//mysql
      - ./mysql/initdb.d:/docker-entrypoint-initdb.d
    cap_add:
      - SYS_NICE
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    networks:
      - global
  redis-master:
    image: redis:7-alpine
    container_name: redis-master
    ports:
      - "6379:6379"
    volumes:
      - ./redis/master.conf:/usr/local/etc/redis/redis.conf
      - ./redis/entrypoint.sh:/usr/local/entrypoint.sh
    entrypoint: [sh, "/usr/local/entrypoint.sh"]
    depends_on:
      - redis-node1
      - redis-node2
    networks:
      - global

  redis-node1:
    image: redis:7-alpine
    container_name: redis-node1
    ports:
      - "6380:6379"
    volumes:
      - ./redis/node.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - global

  redis-node2:
    image: redis:7-alpine
    container_name: redis-node2
    ports:
      - "6381:6379"
    volumes:
      - ./redis/node.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - global
networks:
  global:
    external: true
